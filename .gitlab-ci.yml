# Define pipeline stages
stages:
  - prometheus-setup
  - deploy-terraform
  - deploy-kubernetes
  - deploy-frontend
  - deploy-backend

# Prometheus setup stage
.prometheus-setup:
  script:
    - chmod +x ./scripts/prometheus-setup.sh
    - ./scripts/prometheus-setup.sh > logs/prometheus-setup.log 2>&1 || { echo "Prometheus setup failed"; exit 1; }
  artifacts:
    when: always
    paths:
      - logs/prometheus-setup.log
    expire_in: 1 week
  allow_failure: false

# Terraform deployment stage
deploy-terraform:
  stage: deploy-terraform
  script:
    - chmod +x ./scripts/deploy-terraform.sh
    - ./scripts/deploy-terraform.sh || { echo "Terraform deployment failed"; exit 1; }
    - chmod +x ./scripts/deploy-to-clusters.sh
    - ./scripts/deploy-to-clusters.sh > logs/kubernetes-deploy.log 2>&1 || { echo "Kubernetes deployment failed"; exit 1; }
  dependencies:
    - .prometheus-setup
  artifacts:
    paths:
      - logs/kubernetes-deploy.log

# Kubernetes deployment stage
deploy-kubernetes:
  stage: deploy-kubernetes
  script:
    - chmod +x ./scripts/kubectl-config.sh
    - ./scripts/kubectl-config.sh || { echo "Kubectl config failed"; exit 1; }
    - kubectl apply -f kubernetes/deployment.yaml || { echo "Failed to apply deployment"; exit 1; }
    - kubectl apply -f kubernetes/prometheus-federation.yaml || { echo "Failed to apply Prometheus federation"; exit 1; }
    - kubectl apply -f kubernetes/ingress.yaml || { echo "Failed to apply ingress"; exit 1; }
  dependencies:
    - deploy-terraform

# Frontend deployment stage
deploy-frontend:
  stage: deploy-frontend
  script:
    - npm install
    - npm run build
    - vercel deploy --prod || { echo "Frontend deployment failed"; exit 1; }
  only:
    - main
  artifacts:
    when: always
    paths:
      - build/

# Backend deployment stage
deploy-backend:
  stage: deploy-backend
  script:
    - npm install
    - npm start || { echo "Backend start failed"; exit 1; }
  only:
    - main
